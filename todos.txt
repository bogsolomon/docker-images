1. Share wtRed5 code in git (include latest changes to work in docker properly) (done)
	a. Add docker changes to configs (done)
	b. Add docker folders to git (done)
2. Code to control the cloud - simple scala program that takes a command to start a new red5-node (done)
	a. Receive external command via docker remote (done)
	b. Program to send command remote (done)
	c. Configure ip of remote client in code/script (each node has own self-org-manager running) (done)
	d. Persistent instance count (done)
	e. Add logging to file (done)
4. Media playback through red5-media (done)
	a. Try convert to avi (done)
5. Add red5-gateway and test system with cloud1/2 and cloud5 in different 'clouds'
	a. Test with amazon instance of red5-cloud?
3. Self-optimizing local system for each red5-media image (done)
	a. Sensor -> Filter code in scala (done)
6. Ants control system moving ants from self-opt to self-opt host
	a. Remove auto downing
	b. Add removal of addresses for unreachable nodes



============================================================================================================================================================

docker run -d --net=red5 --name=red5-0 -e red5_port=1936 -e red5_ip=172.30.4.2 -p 1936:1935 bsolomon/red5-media:v1
docker run -it --net=red5 --name=red5-control-0 -e red5_port=1936 -e managed_host=red5-0 -e red5_ip=172.30.4.2 -v /usr/local/docker-images/red5-control/config:/config bsolomon/red5-control:v1


docker run -it --net=red5 --name=red5-manager-0 -e is_seed=true -e red5_ip=172.30.4.2 -v /var/run/docker.sock:/var/run/docker.sock -v /usr/local/docker-images/red5-manager/config:/config bsolomon/red5-manager:v1


============================================================================================================================================================

Ants change to house hunting but keep running until threahsold of changd ants reached (based on last N server's pheromone levels) (done)
All ants go to manager and simulate new solution (ants killed if needed)
	Add antsystem to manager to join group (done)
	Add logic for house hunting (done)
	Add logging via docker volume (use docker logs?)
	Manager starts/stops servers per count and kills required ants (done)
	Decide when to restart ants by having ant system count number of servers to start/stop and having the manager send a message back for every node started/stopped (done)
	Change logic to have 1 ant per server, ant goes to own server first. Ant can visit same server, if single server in cloud
Need to update pheromone level of server when an ant reaches it. Need to add pheromone decay (done)

Tests will run with 1 cloud (no need for gateways in tests)
	1. Test 1 - one server, no scaling needed
	2. Test 2 - one server, needs scaling
	3. Test 3 - two servers, no scaling needed
	4. Test 4 - two servers, up scaling needed
	4. Test 5 - two servers, down scaling needed